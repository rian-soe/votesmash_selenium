name: Selenium Tests CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: votesmash
          MYSQL_USER: votesmash_user
          MYSQL_PASSWORD: votesmash_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg unzip
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1-3)
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Run tests
      env:
        HEADLESS: true
        BROWSER: chrome
        WINDOW_SIZE: 1920,1080
        CI: true
        DB_HOST: localhost
        DB_USER: votesmash_user
        DB_PASSWORD: votesmash_password
        DB_NAME: votesmash
        DB_PORT: 3306
        APP_URL: ${{ secrets.APP_URL || 'http://localhost:8080' }}
      run: npm test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test/test_results/

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: selenium-tests:latest

    - name: Run Docker tests
      run: |
        docker run --rm \
          -e HEADLESS=true \
          -e BROWSER=chrome \
          -e CI=true \
          -e DB_HOST=host.docker.internal \
          -e DB_USER=votesmash_user \
          -e DB_PASSWORD=votesmash_password \
          -e DB_NAME=votesmash \
          -e DB_PORT=3306 \
          selenium-tests:latest
